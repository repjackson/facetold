head
    title Facet
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    meta(name='mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='')
    meta(name='format-detection', content='telephone=no')
    link(rel='apple-touch-icon', sizes='57x57', href='/apple-touch-icon-57x57.png')
    link(rel='apple-touch-icon', sizes='60x60', href='/apple-touch-icon-60x60.png')
    link(rel='apple-touch-icon', sizes='72x72', href='/apple-touch-icon-72x72.png')
    link(rel='apple-touch-icon', sizes='76x76', href='/apple-touch-icon-76x76.png')
    link(rel='apple-touch-icon', sizes='114x114', href='/apple-touch-icon-114x114.png')
    link(rel='apple-touch-icon', sizes='120x120', href='/apple-touch-icon-120x120.png')
    link(rel='apple-touch-icon', sizes='144x144', href='/apple-touch-icon-144x144.png')
    link(rel='apple-touch-icon', sizes='152x152', href='/apple-touch-icon-152x152.png')
    link(rel='apple-touch-icon', sizes='180x180', href='/apple-touch-icon-180x180.png')
    link(rel='icon', type='image/png', href='/favicon-32x32.png', sizes='32x32')
    link(rel='icon', type='image/png', href='/favicon-194x194.png', sizes='194x194')
    link(rel='icon', type='image/png', href='/favicon-96x96.png', sizes='96x96')
    link(rel='icon', type='image/png', href='/android-chrome-192x192.png', sizes='192x192')
    link(rel='icon', type='image/png', href='/favicon-16x16.png', sizes='16x16')
    link(rel='manifest', href='/manifest.json')
    meta(name='apple-mobile-web-app-title', content='facet')
    meta(name='application-name', content='facet')
    meta(name='msapplication-TileColor', content='#00a300')
    meta(name='msapplication-TileImage', content='/mstile-144x144.png')
    meta(name='theme-color', content='#ffffff')

body
    +home

template(name='home')
    unless editmode
        .ui.menu
            .ui.item
                +loginButtons
            if currentUser
                if ismydocsmode
                    a#viewpeople.ui.item
                        i.users.icon
                        |People
                else
                    a#viewmydocs.ui.item
                        i.folder.icon
                        |My Docs
                a#add.ui.item
                    i.plus.icon
                    |Add
        h3.ui.center.aligned.header
            if ismydocsmode
                i.file.text.outline.icon
                |My Documents
            else
                i.users.icon
                |People
        .ui.center.aligned.segment
            .ui.left.icon.input
                i.search.icon
                input#search(type='text' placeholder="Search/'clear'" autofocus='')
            if selectedtags
                #cleartags.ui.circular.compact.grey.icon.button
                    i.remove.icon
                    // |Clear
            each selectedtags
                .unselecttag.ui.compact.grey.button
                    i.minus.icon
                    |#{this}
            each globaltags
                .selecttag.ui.compact.basic.button
                    |#{this.name}
                    small (#{this.count})
    .ui.center.aligned.container
        if ismydocsmode
            +docs
        else
            +people

template(name='people')
    each peoplelist
        +person

template(name='docs')
    each doclist
        +doc


template(name='doc')
    .ui.segment
        if isediting
            each tags
                .ui.large.basic.label
                    i.remove.link.removedoctag.icon
                    |#{this}
            .ui.left.icon.input
                i.plus.icon
                input#addtag(type='text' placeholder='Add Tag' autofocus='')
            .actions
                #save.ui.circular.basic.button
                    i.check.icon
                    |Save
                #delete.ui.circular.basic.button
                    i.trash.icon
                    |Delete
            .ui.segment
                +location
        else
            each tags
                .doctag.ui.compact.button(class=doctagclass) #{this}
            .actions
                |#{when}
                if isAuthor
                    .edit.ui.circular.basic.icon.small.button: i.pencil.icon


template(name='person')
    .ui.segment
        h3
            i.disabled.user.icon
            |#{username}
        each cloud
            .persontag.ui.compact.button(class=persontagclass)
                |#{this.name} (#{this.count})