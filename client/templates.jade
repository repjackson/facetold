head
    title Facet
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    meta(name='mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='')
    meta(name='format-detection', content='telephone=no')
    link(rel='apple-touch-icon', sizes='57x57', href='/apple-touch-icon-57x57.png')
    link(rel='apple-touch-icon', sizes='60x60', href='/apple-touch-icon-60x60.png')
    link(rel='apple-touch-icon', sizes='72x72', href='/apple-touch-icon-72x72.png')
    link(rel='apple-touch-icon', sizes='76x76', href='/apple-touch-icon-76x76.png')
    link(rel='apple-touch-icon', sizes='114x114', href='/apple-touch-icon-114x114.png')
    link(rel='apple-touch-icon', sizes='120x120', href='/apple-touch-icon-120x120.png')
    link(rel='apple-touch-icon', sizes='144x144', href='/apple-touch-icon-144x144.png')
    link(rel='apple-touch-icon', sizes='152x152', href='/apple-touch-icon-152x152.png')
    link(rel='apple-touch-icon', sizes='180x180', href='/apple-touch-icon-180x180.png')
    link(rel='icon', type='image/png', href='/favicon-32x32.png', sizes='32x32')
    link(rel='icon', type='image/png', href='/favicon-194x194.png', sizes='194x194')
    link(rel='icon', type='image/png', href='/favicon-96x96.png', sizes='96x96')
    link(rel='icon', type='image/png', href='/android-chrome-192x192.png', sizes='192x192')
    link(rel='icon', type='image/png', href='/favicon-16x16.png', sizes='16x16')
    link(rel='manifest', href='/manifest.json')
    meta(name='apple-mobile-web-app-title', content='facet')
    meta(name='application-name', content='facet')
    meta(name='msapplication-TileColor', content='#00a300')
    meta(name='msapplication-TileImage', content='/mstile-144x144.png')
    meta(name='theme-color', content='#ffffff')

body
    #render-target
    +home

template(name='home')
    unless $.Session.get 'editing'
        .ui.grey.center.aligned.segment.globalcloud
            if selectedtags
                #cleartags.ui.circular.grey.icon.button
                    i.remove.icon
            each selectedtags
                .unselecttag.ui.large.compact.grey.button
                    i.minus.icon
                    |#{this}
            each globaltags
                .selecttag.ui.large.compact.button
                    |#{this.name}
                    small #{this.count}
    .ui.container
        each docs
            .ui.segment
                if is_editing
                    +edit
                else
                    +view


template(name='view')
    if body.length
        +markdown
            #{body}
    div Doc Sentiment: #{docSentiment}
    div Doc Sentiment Amount: #{docSentimentScore}
    .tags Yaki Tags
        each tags
            .doc_tag.ui.small.compact.button(class=doc_tag_class)
                i.tag.icon
                |#{this}
    .keywords Alchemy Keywords
        each keywords
            .ui.button
                |#{this.text}
                small #{this.relevance}

    .ui.horizontal.divider
    .footer
        |#{when} by #{author.username}
        unless isAuthor
            .ui.button by #{author.username}
        if currentUser
            if isAuthor
                .edit.ui.circular.compact.button Edit

template(name='edit')
    .ui.segment
        h3.ui.header
            |Document Tags
            if tags
                #clear_doc_tags.ui.basic.compact.button
                    i.remove.icon
                    |Clear All Tags
        .ui.divider
        each tags
            .ui.button.large.compact.removetag
                i.minus.icon
                |#{this}
        .ui.left.icon.small.input
            i.plus.icon
            input#addtag(type='text' autofocus='')
    .ui.segment
        h3.ui.header
            |Suggested Tags
            #suggest_tags.ui.basic.compact.button
                i.wizard.icon
                |Learn from Body
            if unique_suggested_tags
                #add_all_suggested_tags.ui.compact.button
                    i.up.arrow.icon
                    |Add All Suggested Tags
                #clear_suggested_tags.ui.basic.compact.button
                    i.remove.icon
                    |Clear Suggested Tags
        .ui.divider
        each unique_suggested_tags
            .ui.compact.basic.large.button.add_suggested_tag
                i.plus.icon
                |#{this}
    .ui.segment
        h3.ui.header Body
            small
                |(
                a(href='https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet' target='_blank') Markdown
                |is interpreted)
        +CodeMirror id="codebody" name="someName" options=editorOptions code=body
        .sentiment
            h4.ui.header Doc Sentiment: #{docSentiment}
            h4.ui.header Doc Sentiment Amount: #{docSentimentScore}
        .keywords
            h4.ui.keywords Keywords
            each keywords
                .ui.button
                    |#{this.text}
                    small #{this.relevance}
    .actions
        #save.ui.big.button
            i.check.icon
            |Save
        #delete.ui.icon.button: i.trash.icon